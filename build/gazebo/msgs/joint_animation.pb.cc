// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: joint_animation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "joint_animation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#pragma GCC diagnostic ignored "-Wshadow"
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* JointAnimation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointAnimation_reflection_ = NULL;
const ::google::protobuf::Descriptor* JointAnimation_Joint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointAnimation_Joint_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_joint_5fanimation_2eproto() {
  protobuf_AddDesc_joint_5fanimation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "joint_animation.proto");
  GOOGLE_CHECK(file != NULL);
  JointAnimation_descriptor_ = file->message_type(0);
  static const int JointAnimation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation, model_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation, joint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation, time_),
  };
  JointAnimation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JointAnimation_descriptor_,
      JointAnimation::default_instance_,
      JointAnimation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JointAnimation));
  JointAnimation_Joint_descriptor_ = JointAnimation_descriptor_->nested_type(0);
  static const int JointAnimation_Joint_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation_Joint, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation_Joint, angle_),
  };
  JointAnimation_Joint_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JointAnimation_Joint_descriptor_,
      JointAnimation_Joint::default_instance_,
      JointAnimation_Joint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation_Joint, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointAnimation_Joint, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JointAnimation_Joint));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_joint_5fanimation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JointAnimation_descriptor_, &JointAnimation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JointAnimation_Joint_descriptor_, &JointAnimation_Joint::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_joint_5fanimation_2eproto() {
  delete JointAnimation::default_instance_;
  delete JointAnimation_reflection_;
  delete JointAnimation_Joint::default_instance_;
  delete JointAnimation_Joint_reflection_;
}

void protobuf_AddDesc_joint_5fanimation_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::gazebo::msgs::protobuf_AddDesc_pose_2eproto();
  ::gazebo::msgs::protobuf_AddDesc_time_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025joint_animation.proto\022\013gazebo.msgs\032\npo"
    "se.proto\032\ntime.proto\"\235\001\n\016JointAnimation\022"
    "\022\n\nmodel_name\030\001 \002(\t\0220\n\005joint\030\002 \003(\0132!.gaz"
    "ebo.msgs.JointAnimation.Joint\022\037\n\004time\030\003 "
    "\003(\0132\021.gazebo.msgs.Time\032$\n\005Joint\022\014\n\004name\030"
    "\001 \003(\t\022\r\n\005angle\030\002 \003(\001", 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "joint_animation.proto", &protobuf_RegisterTypes);
  JointAnimation::default_instance_ = new JointAnimation();
  JointAnimation_Joint::default_instance_ = new JointAnimation_Joint();
  JointAnimation::default_instance_->InitAsDefaultInstance();
  JointAnimation_Joint::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_joint_5fanimation_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_joint_5fanimation_2eproto {
  StaticDescriptorInitializer_joint_5fanimation_2eproto() {
    protobuf_AddDesc_joint_5fanimation_2eproto();
  }
} static_descriptor_initializer_joint_5fanimation_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int JointAnimation_Joint::kNameFieldNumber;
const int JointAnimation_Joint::kAngleFieldNumber;
#endif  // !_MSC_VER

JointAnimation_Joint::JointAnimation_Joint()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JointAnimation_Joint::InitAsDefaultInstance() {
}

JointAnimation_Joint::JointAnimation_Joint(const JointAnimation_Joint& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JointAnimation_Joint::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointAnimation_Joint::~JointAnimation_Joint() {
  SharedDtor();
}

void JointAnimation_Joint::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JointAnimation_Joint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointAnimation_Joint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointAnimation_Joint_descriptor_;
}

const JointAnimation_Joint& JointAnimation_Joint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5fanimation_2eproto();
  return *default_instance_;
}

JointAnimation_Joint* JointAnimation_Joint::default_instance_ = NULL;

JointAnimation_Joint* JointAnimation_Joint::New() const {
  return new JointAnimation_Joint;
}

void JointAnimation_Joint::Clear() {
  name_.Clear();
  angle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JointAnimation_Joint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name(this->name_size() - 1).data(),
            this->name(this->name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_name;
        if (input->ExpectTag(17)) goto parse_angle;
        break;
      }

      // repeated double angle = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_angle())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_angle())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_angle;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JointAnimation_Joint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->name(i).data(), this->name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  // repeated double angle = 2;
  for (int i = 0; i < this->angle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->angle(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JointAnimation_Joint::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  // repeated double angle = 2;
  for (int i = 0; i < this->angle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->angle(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JointAnimation_Joint::ByteSize() const {
  int total_size = 0;

  // repeated string name = 1;
  total_size += 1 * this->name_size();
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  // repeated double angle = 2;
  {
    int data_size = 0;
    data_size = 8 * this->angle_size();
    total_size += 1 * this->angle_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointAnimation_Joint::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JointAnimation_Joint* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JointAnimation_Joint*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JointAnimation_Joint::MergeFrom(const JointAnimation_Joint& from) {
  GOOGLE_CHECK_NE(&from, this);
  name_.MergeFrom(from.name_);
  angle_.MergeFrom(from.angle_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JointAnimation_Joint::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointAnimation_Joint::CopyFrom(const JointAnimation_Joint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointAnimation_Joint::IsInitialized() const {

  return true;
}

void JointAnimation_Joint::Swap(JointAnimation_Joint* other) {
  if (other != this) {
    name_.Swap(&other->name_);
    angle_.Swap(&other->angle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JointAnimation_Joint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointAnimation_Joint_descriptor_;
  metadata.reflection = JointAnimation_Joint_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int JointAnimation::kModelNameFieldNumber;
const int JointAnimation::kJointFieldNumber;
const int JointAnimation::kTimeFieldNumber;
#endif  // !_MSC_VER

JointAnimation::JointAnimation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JointAnimation::InitAsDefaultInstance() {
}

JointAnimation::JointAnimation(const JointAnimation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JointAnimation::SharedCtor() {
  _cached_size_ = 0;
  model_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointAnimation::~JointAnimation() {
  SharedDtor();
}

void JointAnimation::SharedDtor() {
  if (model_name_ != &::google::protobuf::internal::kEmptyString) {
    delete model_name_;
  }
  if (this != default_instance_) {
  }
}

void JointAnimation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointAnimation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointAnimation_descriptor_;
}

const JointAnimation& JointAnimation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5fanimation_2eproto();
  return *default_instance_;
}

JointAnimation* JointAnimation::default_instance_ = NULL;

JointAnimation* JointAnimation::New() const {
  return new JointAnimation;
}

void JointAnimation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_model_name()) {
      if (model_name_ != &::google::protobuf::internal::kEmptyString) {
        model_name_->clear();
      }
    }
  }
  joint_.Clear();
  time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JointAnimation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string model_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->model_name().data(), this->model_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_joint;
        break;
      }

      // repeated .gazebo.msgs.JointAnimation.Joint joint = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_joint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_joint()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_joint;
        if (input->ExpectTag(26)) goto parse_time;
        break;
      }

      // repeated .gazebo.msgs.Time time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_time;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JointAnimation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string model_name = 1;
  if (has_model_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->model_name().data(), this->model_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->model_name(), output);
  }

  // repeated .gazebo.msgs.JointAnimation.Joint joint = 2;
  for (int i = 0; i < this->joint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->joint(i), output);
  }

  // repeated .gazebo.msgs.Time time = 3;
  for (int i = 0; i < this->time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->time(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JointAnimation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string model_name = 1;
  if (has_model_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->model_name().data(), this->model_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model_name(), target);
  }

  // repeated .gazebo.msgs.JointAnimation.Joint joint = 2;
  for (int i = 0; i < this->joint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->joint(i), target);
  }

  // repeated .gazebo.msgs.Time time = 3;
  for (int i = 0; i < this->time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->time(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JointAnimation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string model_name = 1;
    if (has_model_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_name());
    }

  }
  // repeated .gazebo.msgs.JointAnimation.Joint joint = 2;
  total_size += 1 * this->joint_size();
  for (int i = 0; i < this->joint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->joint(i));
  }

  // repeated .gazebo.msgs.Time time = 3;
  total_size += 1 * this->time_size();
  for (int i = 0; i < this->time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->time(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointAnimation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JointAnimation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JointAnimation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JointAnimation::MergeFrom(const JointAnimation& from) {
  GOOGLE_CHECK_NE(&from, this);
  joint_.MergeFrom(from.joint_);
  time_.MergeFrom(from.time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_model_name()) {
      set_model_name(from.model_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JointAnimation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointAnimation::CopyFrom(const JointAnimation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointAnimation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < time_size(); i++) {
    if (!this->time(i).IsInitialized()) return false;
  }
  return true;
}

void JointAnimation::Swap(JointAnimation* other) {
  if (other != this) {
    std::swap(model_name_, other->model_name_);
    joint_.Swap(&other->joint_);
    time_.Swap(&other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JointAnimation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointAnimation_descriptor_;
  metadata.reflection = JointAnimation_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

GZ_REGISTER_STATIC_MSG("gazebo.msgs.JointAnimation", JointAnimation)
// @@protoc_insertion_point(global_scope)
